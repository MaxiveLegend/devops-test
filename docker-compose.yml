version: "3.8"

services:
  database:
    image: mongo:latest
    container_name: mongodb
    networks:
      - net
    volumes:
      - type: bind
        source: ./devops/data
        target: /data/db
    restart: on-failure

  api:
    container_name: devops-api
    build:
      dockerfile: devops/Dockerfile
    networks:
      - net
    ports:
      - "5000:3000"
    environment:
      MONGO_URL: mongodb://mongodb:27017
      DB_NAME: mydb

  database-exporter:
    image: bitnami/mongodb-exporter
    container_name: mongo-exporter
    networks:
      - net
    environment:
      MONGODB_URI: mongodb://mongodb:27017
      DB_NAME: mydb

  monitor:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - net
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yaml

  grafana:
    build: ./grafana
    container_name: grafana
    networks:
      - net
    ports:
      - "3000:3000"

  alertmanager:
    image: prom/alertmanager:v0.23.0
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - "./alertmanager:/config"
      - alertmanager-data:/data
    command: --config.file=/config/alertmanager.yml --log.level=debug

volumes:
  prometheus-data:
  alertmanager-data:

networks:
  net:
    name: devops_net
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/16
          gateway: 172.19.0.1
