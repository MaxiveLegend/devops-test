version: "3.8"

services:
  database:
    image: mongo:4
    container_name: mongodb
    networks:
      - net
    volumes:
      - type: bind
        source: ./devops/data
        target: /data/db
    restart: on-failure

  api:
    container_name: devops-api
    depends_on: 
      - rabbitmq
    restart: on-failure
    build:
      context: ./devops
      dockerfile: Dockerfile
    networks:
      - net
    ports:
      - "5000:3000"
    environment:
      MONGO_URL: mongodb://mongodb:27017
      DB_NAME: mydb

  database-exporter:
    image: bitnami/mongodb-exporter
    container_name: mongo-exporter
    networks:
      - net
    environment:
      MONGODB_URI: mongodb://mongodb:27017
      DB_NAME: mydb

  monitor:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - net
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yaml

  grafana:
    build: ./grafana
    container_name: grafana
    networks:
      - net
    ports:
      - "3000:3000"

  rabbitmq:
    build:
      dockerfile: rabbitmq/Dockerfile
    container_name: rabbitmq
    networks:
      - net
    ports:
      - "15672:15672"
    # Check if rabbitmq is ready for connections yet
    healthcheck:
      test: curl -sS http://localhost:15672 || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  extra-service:
    build:
      context: ./extra-service
      dockerfile: Dockerfile
    container_name: extra-service
    depends_on: 
      - rabbitmq
    restart: on-failure
    networks:
      - net
    ports:
      - "9000:9000"

volumes:
  prometheus-data:

networks:
  net:
    name: devops_net
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/16
          gateway: 172.19.0.1
